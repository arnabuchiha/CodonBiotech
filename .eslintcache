[{"G:\\Projects\\codonbiotech\\src\\index.js":"1","G:\\Projects\\codonbiotech\\src\\reportWebVitals.js":"2","G:\\Projects\\codonbiotech\\src\\App.js":"3","G:\\Projects\\codonbiotech\\src\\components\\Nav.js":"4","G:\\Projects\\codonbiotech\\src\\components\\Home.js":"5","G:\\Projects\\codonbiotech\\src\\components\\Slider\\Slider.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":547,"mtime":1607443686034,"results":"10","hashOfConfig":"8"},{"size":3680,"mtime":1607781269689,"results":"11","hashOfConfig":"8"},{"size":4176,"mtime":1607781418579,"results":"12","hashOfConfig":"8"},{"size":2534,"mtime":1607759646731,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"115zsdm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"G:\\Projects\\codonbiotech\\src\\index.js",[],["28","29"],"G:\\Projects\\codonbiotech\\src\\reportWebVitals.js",[],"G:\\Projects\\codonbiotech\\src\\App.js",[],"G:\\Projects\\codonbiotech\\src\\components\\Nav.js",["30","31","32","33"],"G:\\Projects\\codonbiotech\\src\\components\\Home.js",["34"],"G:\\Projects\\codonbiotech\\src\\components\\Slider\\Slider.js",["35","36"],"import React from 'react';\r\nimport \"../../assets/styles/slider.css\";\r\nclass Slider extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <div id=\"carouselExampleIndicators\" className=\"slider container-fluid carousel slide\" data-ride=\"carousel\">\r\n                    {/* <ol className=\"carousel-indicators\">\r\n                        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" className=\"active\"></li>\r\n                        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n                        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n                    </ol> */}\r\n                    <div className=\"carousel-inner\">\r\n                            \r\n                    {\r\n                        this.props.slides.map((value,index)=>\r\n                            index!=0?(\r\n                                <div className=\"carousel-item\">\r\n                                <img className=\"d-block w-100\" src={value} alt=\"First slide\"/>\r\n                                <div className=\"carousel-caption\">\r\n                                </div>\r\n                                </div>\r\n                            ):(\r\n                                <div className=\"carousel-item active\">\r\n                                <img className=\"d-block w-100\" src={value} alt=\"First slide\"/>\r\n                                <div className=\"carousel-caption\">\r\n                                </div>\r\n                                </div>\r\n                            )\r\n                        )\r\n                    }\r\n                    </div>\r\n                    <a className=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n                        <span aria-hidden=\"true\">\r\n                        <i className=\"fas fa-long-arrow-alt-left\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                        <span className=\"sr-only\">Previous</span>\r\n                    </a>\r\n                    <a className=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n                        <span aria-hidden=\"true\">\r\n                        <i className=\"fas fa-long-arrow-alt-right\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                        <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Slider;",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":26,"nodeType":"43","messageId":"44","endLine":2,"endColumn":32},{"ruleId":"41","severity":1,"message":"45","line":2,"column":33,"nodeType":"43","messageId":"44","endLine":2,"endColumn":37},{"ruleId":"46","severity":1,"message":"47","line":11,"column":21,"nodeType":"48","endLine":11,"endColumn":69},{"ruleId":"49","severity":1,"message":"50","line":12,"column":25,"nodeType":"48","endLine":12,"endColumn":102},{"ruleId":"46","severity":1,"message":"47","line":31,"column":25,"nodeType":"48","endLine":31,"endColumn":37},{"ruleId":"51","severity":1,"message":"52","line":4,"column":5,"nodeType":"53","messageId":"54","endLine":6,"endColumn":6},{"ruleId":"55","severity":1,"message":"56","line":19,"column":34,"nodeType":"57","messageId":"58","endLine":19,"endColumn":36},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]